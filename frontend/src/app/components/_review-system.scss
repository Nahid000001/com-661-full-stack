/* Review System Design Variables and Mixins */

// Colors
$color-primary: var(--primary-color);
$color-primary-light: var(--primary-light);
$color-primary-dark: var(--primary-dark);
$color-secondary: var(--secondary-color);
$color-text: var(--text-color);
$color-text-light: var(--text-light);
$color-bg: var(--background-color);
$color-card: var(--card-bg, #fff);
$color-border: var(--border-color);
$color-success: var(--success-color);
$color-warning: var(--warning-color);
$color-error: var(--error-color);
$color-star: #ffc107;
$color-star-empty: #e0e0e0;

// Spacing
$spacing-xs: 0.25rem;
$spacing-sm: 0.5rem;
$spacing-md: 1rem;
$spacing-lg: 1.5rem;
$spacing-xl: 2rem;

// Typography
$font-size-xs: 0.75rem;
$font-size-sm: 0.875rem;
$font-size-md: 1rem;
$font-size-lg: 1.125rem;
$font-size-xl: 1.25rem;

// Borders and Shadows
$radius-sm: 4px;
$radius-md: 8px;
$radius-lg: 12px;
$shadow-sm: 0 2px 5px rgba(0, 0, 0, 0.05);
$shadow-md: 0 4px 10px rgba(0, 0, 0, 0.08);
$shadow-lg: 0 8px 16px rgba(0, 0, 0, 0.1);
$shadow-card: 0 10px 20px rgba(0, 0, 0, 0.05);
$shadow-hover: 0 12px 28px rgba(0, 0, 0, 0.12);

// Transitions
$transition-fast: all 0.2s ease;
$transition-normal: all 0.3s ease;
$transition-slow: all 0.5s ease;

// Z-Index
$z-index-dropdown: 100;
$z-index-tooltip: 200;

/* Mixins */

// Card Styling
@mixin card-style {
  background-color: $color-card;
  border-radius: $radius-lg;
  padding: $spacing-lg;
  box-shadow: $shadow-card;
  border: 1px solid rgba($color-border, 0.6);
  transition: $transition-normal;
  
  &:hover {
    box-shadow: $shadow-hover;
  }
}

// Star Rating
@mixin star {
  position: relative;
  display: inline-block;
  width: 1em;
  height: 1em;
  margin-right: 2px;
  color: $color-star-empty;
  
  &::before {
    content: 'â˜…';
  }
  
  &.filled {
    color: $color-star;
  }
}

// Interactive Button
@mixin interactive-button {
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 500;
  border-radius: $radius-md;
  transition: $transition-normal;
  cursor: pointer;
  
  &:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }
}

// Primary Button
@mixin primary-button {
  @include interactive-button;
  background-color: $color-primary;
  color: white;
  border: none;
  
  &:hover:not(:disabled) {
    background-color: $color-primary-dark;
    box-shadow: $shadow-md;
    transform: translateY(-2px);
  }
}

// Secondary Button
@mixin secondary-button {
  @include interactive-button;
  background-color: transparent;
  border: 1px solid $color-border;
  color: $color-text;
  
  &:hover:not(:disabled) {
    background-color: rgba($color-primary, 0.05);
    border-color: $color-primary-light;
  }
}

// Error styling
@mixin error-message {
  color: $color-error;
  font-size: $font-size-sm;
  background-color: rgba($color-error, 0.1);
  padding: $spacing-xs $spacing-sm;
  border-radius: $radius-sm;
  border-left: 3px solid $color-error;
}

// Success styling
@mixin success-message {
  color: $color-success;
  font-size: $font-size-sm;
  background-color: rgba($color-success, 0.1);
  padding: $spacing-xs $spacing-sm;
  border-radius: $radius-sm;
  border-left: 3px solid $color-success;
}

// Form control
@mixin form-control {
  width: 100%;
  padding: $spacing-md;
  border: 1px solid $color-border;
  border-radius: $radius-md;
  font-size: $font-size-md;
  transition: $transition-normal;
  
  &:focus {
    border-color: $color-primary-light;
    box-shadow: 0 0 0 2px rgba($color-primary, 0.1);
    outline: none;
  }
}

// Form label
@mixin form-label {
  display: block;
  margin-bottom: $spacing-xs;
  font-weight: 500;
  font-size: $font-size-sm;
  color: $color-text;
}

// Fade In Animation
@mixin fade-in($duration: 0.3s, $delay: 0s) {
  animation: fadeIn $duration ease $delay;
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
}

// Slide In Animation
@mixin slide-in($direction: 'up', $distance: 10px, $duration: 0.3s, $delay: 0s) {
  @if $direction == 'up' {
    animation: slideInUp $duration ease $delay;
    
    @keyframes slideInUp {
      from { opacity: 0; transform: translateY($distance); }
      to { opacity: 1; transform: translateY(0); }
    }
  } @else if $direction == 'down' {
    animation: slideInDown $duration ease $delay;
    
    @keyframes slideInDown {
      from { opacity: 0; transform: translateY(-$distance); }
      to { opacity: 1; transform: translateY(0); }
    }
  } @else if $direction == 'left' {
    animation: slideInLeft $duration ease $delay;
    
    @keyframes slideInLeft {
      from { opacity: 0; transform: translateX($distance); }
      to { opacity: 1; transform: translateX(0); }
    }
  } @else if $direction == 'right' {
    animation: slideInRight $duration ease $delay;
    
    @keyframes slideInRight {
      from { opacity: 0; transform: translateX(-$distance); }
      to { opacity: 1; transform: translateX(0); }
    }
  }
} 